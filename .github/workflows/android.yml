name: Android

on:
  workflow_call:
    inputs:
      # Basic inputs
      target:
        type: string
        required: true
      crates:
        type: string
        required: true
      dependencies:
        type: string
        required: false
        default: ""
      env:
        type: string
        required: false
        default: ""
      # Advanced inputs
      names:
        type: string
        required: false
        default: >
          {
            "x86_64-linux-android":       "x64",
            "aarch64-linux-android":      "ARM64",
            "armv7-linux-androideabi":    "ARMv7"
          }
      oses:
        type: string
        required: false
        default: >
          {
            "x86_64-linux-android":       "ubuntu-24.04",
            "aarch64-linux-android":      "ubuntu-24.04",
            "armv7-linux-androideabi":    "ubuntu-24.04"
          }

jobs:
  android:
    name: ${{ fromJson(inputs.names)[inputs.target] }}
    runs-on: ${{ fromJson(inputs.oses)[inputs.target] }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Process inputs
        if: inputs.env != ''
        uses: xStrom/ci-test/inputs@main
        with:
          env: ${{ inputs.env }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get configuration
        id: config
        uses: xStrom/ci-test/config@main

      - name: Install Rust ${{ steps.config.outputs.rust-stable }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ steps.config.outputs.rust-stable }}
          targets: ${{ inputs.target }}

      - name: Install cargo-apk
        run: cargo install cargo-apk

      - name: Install additional dependencies
        if: inputs.dependencies != ''
        run: |
          # Install additional dependencies
          ${{ inputs.dependencies }}

      - name: Restore cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ inputs.target }}
          save-if: ${{ github.event_name != 'merge_group' }}

      - name: Run cargo apk check
        env:
          RUSTFLAGS: -D warnings
        run: cargo apk check ${{ inputs.crates }} --profile ci --target ${{ inputs.target }} --all-features
