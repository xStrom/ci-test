name: Docs

on:
  workflow_call:
    inputs:
      # Basic inputs
      target:
        type: string
        required: true
      # Advanced inputs
      names:
        type: string
        required: false
        default: >
          {
            "x86_64-pc-windows-msvc":     "Windows x64",
            "aarch64-pc-windows-msvc":    "Windows ARM64",
          
            "x86_64-apple-darwin":        "macOS x64",
            "aarch64-apple-darwin":       "macOS ARM64",
          
            "x86_64-unknown-linux-gnu":   "Linux x64",
            "aarch64-unknown-linux-gnu":  "Linux ARM64",
          
            "x86_64-linux-android":       "Android x64",
            "aarch64-linux-android":      "Android ARM64",
            "armv7-linux-androideabi":    "Android ARMv7",
          
            "x86_64-apple-ios":           "iOS x64",
            "aarch64-apple-ios":          "iOS ARM64",
          
            "wasm32-unknown-unknown":     "Wasm"
          }
      oses:
        type: string
        required: false
        default: >
          {
            "x86_64-pc-windows-msvc":     "windows-latest",
            "aarch64-pc-windows-msvc":    "windows-latest",
          
            "x86_64-apple-darwin":        "macos-latest",
            "aarch64-apple-darwin":       "macos-latest",
          
            "x86_64-unknown-linux-gnu":   "ubuntu-latest",
            "aarch64-unknown-linux-gnu":  "ubuntu-latest",
          
            "x86_64-linux-android":       "ubuntu-latest",
            "aarch64-linux-android":      "ubuntu-latest",
            "armv7-linux-androideabi":    "ubuntu-latest",
          
            "x86_64-apple-ios":           "macos-latest",
            "aarch64-apple-ios":          "macos-latest,
          
            "wasm32-unknown-unknown":     "ubuntu-latest"
          }

jobs:
  docs:
    name: ${{ fromJson(inputs.names)[inputs.target] }}
    runs-on: ${{ fromJson(inputs.oses)[inputs.target] }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust nightly
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: ${{ inputs.target }}

      # We test documentation using nightly to match docs.rs.
      - name: Run cargo doc
        run: cargo doc --workspace --locked --profile ci --target ${{ inputs.target }} --all-features --no-deps --document-private-items -Zunstable-options -Zrustdoc-scrape-examples
        env:
          RUSTDOCFLAGS: '--cfg docsrs -D warnings'
