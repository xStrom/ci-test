name: Copyright
description: Checks whether the correct copyright headers are present.

inputs:
  # Basic inputs
  name:
    description: The name in the phrase "the $name Authors".
    required: false
    default: ""
  license:
    description: The SPDX license expression.
    required: false
    default: Apache-2.0 OR MIT
  glob:
    description: The files to include.
    required: false
    default: "*.rs"
  # Advanced inputs
  config:
    # Expected input JSON format:
    # [
    #   {
    #     "name":    "Cool",
    #     "license": "Apache-2.0 OR MIT",
    #     "globs":   "-g '*.rs' -g '!other'"
    #   },
    #   {
    #     "name":    "Cool",
    #     "license": "BSD",
    #     "globs":   "-g 'other/**/*.rs'"
    #   }
    # ]
    description: Advanced configuration in a single JSON array, overrides basic inputs.
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Install ripgrep
      uses: xStrom/ci-test/install@main

    - name: Check copyright headers
      shell: bash
      env:
        ARG_NAME: ${{ inputs.name }}
        ARG_LICENSE: ${{ inputs.license }}
        ARG_GLOB: ${{ inputs.glob }}
        ARG_CONFIG: ${{ inputs.config }}
      run: |
        # Check copyright headers
        escape_for_regex() {
          echo "$1" | perl -pe 's/([.\^\$*+?()[\]{}\\])/\\$1/g'
        }

        all_ok=1

        check_headers() {
          local name=$1
          local name_regex=$(escape_for_regex "$name")
          local spdx_expression=$2
          local spdx_expression_regex=$(escape_for_regex "$spdx_expression")
          local header_regex="^// Copyright (19|20)[\d]{2} (.+ and )?the $name_regex Authors( and .+)?\$\n^// SPDX-License-Identifier: $spdx_expression_regex\$\n\n"
          echo "Checking headers with regex: $header_regex"

          shift 2
          local globs=("$@")
          local glob_args=()
          for glob in "${globs[@]}"; do
            glob_args+=('-g' "$glob")
          done
          echo "In the following locations: ${glob_args[@]}"

          set +e
          local output=$(rg "$header_regex" --files-without-match --multiline "${glob_args[@]}" .)
          set -e

          if [ -n "$output" ]; then
            echo -e "\e[31mThe following files lack the correct copyright header:\e[0m\n"
            echo $output
            echo -e "\nPlease add the following header:\n"
            echo -e "\e[32m// Copyright $(date +%Y) the $name Authors\e[0m"
            echo -e "\e[32m// SPDX-License-Identifier: $spdx_expression\e[0m"
            echo -e "\n... rest of the file ...\n"
            all_ok=0
          fi
        }

        # TODO: Confirm that jq and every other used app exists in all scripts

        if [ -n "$ARG_CONFIG" ]; then
          while IFS= read -r cfg; do 
            name=$(echo "$cfg" | jq -r '.name')
            license=$(echo "$cfg" | jq -r '.license')
            readarray -t globs <<< "$(echo "$cfg" | jq -r '.globs[]')"
            check_headers "$name" "$license" "${globs[@]}"
          done < <(echo "$ARG_CONFIG" | jq -c '.[]')
        else
          check_headers "$ARG_NAME" "$ARG_LICENSE" "$ARG_GLOB"
        fi

        if [ "$all_ok" -eq 1 ]; then
          echo "All files have correct copyright headers. Because $all_ok yeah."
        else
          exit 1
        fi
