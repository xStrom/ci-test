name: Configuration
description: Returns various configuration values.

inputs:
  rust-msrv:
    description: Whether to determine MSRV.
    required: false
    default: "false"

outputs:
  # We aim to always test with the latest stable Rust toolchain, however we pin to a specific
  # version like 1.80. Note that we only specify MAJOR.MINOR and not PATCH so that bugfixes still
  # come automatically. If the version specified here is no longer the latest stable version,
  # then please feel free to submit a PR that adjusts it along with the potential clippy fixes.
  rust-stable:
    value: "1.83" # In quotes because otherwise (e.g.) 1.80 would be interpreted as 1.8.
  rust-msrv:
    value: ${{ steps.rust-msrv.outputs.version }}
  rust-host:
    value: ${{ steps.rust-host.outputs.triple }}
  cargo-hack-version:
    value: "0.6" # Behaves as ^0.6.0
  cargo-nextest-version:
    value: "0.9" # Behaves as ^0.9.0
  cargo-rdme-version:
    value: "1" # Behaves as ^1.0.0
  cargo-apk-version:
    value: "^0.10.0"
  # We could in theory be fine with SemVer compatability, however the uncenter/setup-taplo action
  # that we use to install Taplo doesn't support anything other than pinning a specific version.
  taplo-version:
    value: "0.9.3"

runs:
  using: composite
  steps:
    - name: Determine MSRV
      id: rust-msrv
      if: inputs.rust-msrv == 'true'
      shell: bash
      run: |
        # Determine MSRV
        msrv=$(perl -nle 'print $1 if /^\s*[^#\w]*rust-version[^\w]*\s*=\s*[^\w]+([\d\.]+)[^\w]+/' Cargo.toml)
        if [ -z "$msrv" ]; then
          echo "No rust-version found in the workspace Cargo.toml file."
          exit 1
        fi
        echo "version=$msrv" | tee -a $GITHUB_OUTPUT

    - name: Determine host triple
      id: rust-host
      shell: bash
      run: |
        # Determine host triple
        triple=$(rustc --version --verbose | awk '/host:/{print $2}')
        echo "triple=$triple" | tee -a $GITHUB_OUTPUT
